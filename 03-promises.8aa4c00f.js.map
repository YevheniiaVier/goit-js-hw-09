{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,kBAKpC,SAASG,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACjC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPT,EAAKK,UAAUY,aAAa,OAAQ,KACpCjB,EAAKI,WAAWa,aAAa,OAAQ,KAerCjB,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMF,IALA,IAAMC,EAAeF,EAAEG,cAAfD,SACFE,EAAaC,OAAOH,EAASZ,MAAMgB,OACnCC,EAAOF,OAAOH,EAASK,KAAKD,OAC5BE,EAASH,OAAOH,EAASM,OAAOF,OAE7BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BtB,EAAc,CACZE,SAAUoB,EAAI,EACdnB,MAAOc,EAAaK,EAAIF,IAEvBG,MAAK,SAAAtB,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBX,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9DwB,OAAM,SAAA1B,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBX,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n};\nrefs.inputStep.setAttribute('step', 500);\nrefs.inputDelay.setAttribute('step', 500);\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { elements } = e.currentTarget;\n  const firstDelay = Number(elements.delay.value);\n  const step = Number(elements.step.value);\n  const amount = Number(elements.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise({\n      position: i + 1,\n      delay: firstDelay + i * step,\n    })\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","setAttribute","addEventListener","e","preventDefault","elements","currentTarget","firstDelay","Number","value","step","amount","i","then","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8aa4c00f.js.map"}